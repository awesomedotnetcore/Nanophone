<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/Presenter/FeaturePresenterStates/=CoverageTreeFeaturePresenterState/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;CoverageTreeFeaturePresenterState xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.CoverageTree.Presenters"&gt;&lt;ColumnsState xmlns:d2p1="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.CoverageTree.Presenters.Interface" i:type="d2p1:ArrayOfColumnState"&gt;&lt;d2p1:ColumnState&gt;&lt;d2p1:ColumnName&gt;Symbol&lt;/d2p1:ColumnName&gt;&lt;d2p1:SortOrder&gt;Ascending&lt;/d2p1:SortOrder&gt;&lt;d2p1:Width&gt;0&lt;/d2p1:Width&gt;&lt;/d2p1:ColumnState&gt;&lt;d2p1:ColumnState&gt;&lt;d2p1:ColumnName&gt;CoveragePercent&lt;/d2p1:ColumnName&gt;&lt;d2p1:SortOrder&gt;None&lt;/d2p1:SortOrder&gt;&lt;d2p1:Width&gt;115&lt;/d2p1:Width&gt;&lt;/d2p1:ColumnState&gt;&lt;d2p1:ColumnState&gt;&lt;d2p1:ColumnName&gt;StatementsNumber&lt;/d2p1:ColumnName&gt;&lt;d2p1:SortOrder&gt;None&lt;/d2p1:SortOrder&gt;&lt;d2p1:Width&gt;140&lt;/d2p1:Width&gt;&lt;/d2p1:ColumnState&gt;&lt;/ColumnsState&gt;&lt;StatefulNodes xmlns:d2p1="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.CoverageTree.Presenters.Interface" i:type="d2p1:ArrayOfStatefulNodeDescriptor"&gt;&lt;d2p1:StatefulNodeDescriptor&gt;&lt;d2p1:Expanded&gt;true&lt;/d2p1:Expanded&gt;&lt;d2p1:Path xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfstring"&gt;&lt;d4p1:string&gt;Root/Total&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Project/Nanophone.RegistryHost.InMemoryRegistry&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Namespace/Nanophone.RegistryHost.InMemoryRegistry&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Type/InMemoryRegistryHost&lt;/d4p1:string&gt;&lt;/d2p1:Path&gt;&lt;d2p1:Selected&gt;false&lt;/d2p1:Selected&gt;&lt;/d2p1:StatefulNodeDescriptor&gt;&lt;d2p1:StatefulNodeDescriptor&gt;&lt;d2p1:Expanded&gt;false&lt;/d2p1:Expanded&gt;&lt;d2p1:Path xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfstring"&gt;&lt;d4p1:string&gt;Root/Total&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Project/Nanophone.RegistryHost.InMemoryRegistry&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Namespace/Nanophone.RegistryHost.InMemoryRegistry&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Type/InMemoryRegistryHost&lt;/d4p1:string&gt;&lt;d4p1:string&gt;Method/RegisterHealthCheckAsync(string,string,Uri,Nullable&amp;lt;TimeSpan&amp;gt;,string)&lt;/d4p1:string&gt;&lt;/d2p1:Path&gt;&lt;d2p1:Selected&gt;true&lt;/d2p1:Selected&gt;&lt;/d2p1:StatefulNodeDescriptor&gt;&lt;/StatefulNodes&gt;&lt;/CoverageTreeFeaturePresenterState&gt;</s:String>
	<s:String x:Key="/Default/Presenter/FeaturePresenterStates/=FilterableCoverageTreeFeaturePresenterState/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;FilterableCoverageTreeFeaturePresenterState xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.FilterableCoverageTree.Presenters"&gt;&lt;PathsToExcludedNodes xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d2p1:ArrayOfanyType"&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;SolutionFolder/Test&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;SolutionFolder/Samples&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.Core&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.Core&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Type/DnsHelper&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Method/GetIpAddressAsync(System.Boolean)&lt;/d2p1:string&gt;&lt;d2p1:string&gt;InternalCompiledMethod/MoveNext()&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.Core&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.Core.Logging&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.Core&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.Core.Logging.LogProviders&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryHost.ConsulRegistry&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryHost.ConsulRegistry.Logging&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryHost.ConsulRegistry&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryHost.ConsulRegistry.Logging.LogProviders&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryTenant.Nancy&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryTenant.Nancy.Logging&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryTenant.Nancy&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryTenant.Nancy.Logging.LogProviders&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryTenant.WebApi&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryTenant.WebApi.Logging&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryTenant.WebApi&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryTenant.WebApi.Logging.LogProviders&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.Fabio&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryHost.InMemoryRegistry&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryHost.InMemoryRegistry.Logging&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;d2p1:anyType i:type="d2p1:ArrayOfstring"&gt;&lt;d2p1:string&gt;Project/Nanophone.RegistryHost.InMemoryRegistry&lt;/d2p1:string&gt;&lt;d2p1:string&gt;Namespace/Nanophone.RegistryHost.InMemoryRegistry.Logging.LogProviders&lt;/d2p1:string&gt;&lt;/d2p1:anyType&gt;&lt;/PathsToExcludedNodes&gt;&lt;/FilterableCoverageTreeFeaturePresenterState&gt;</s:String>
	<s:String x:Key="/Default/Presenter/FeaturePresenterStates/=SolutionBasedCoverageTreeFeaturePresenterState/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;SolutionBasedCoverageTreeFeaturePresenterState xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.Vs.SolutionBasedCoverageTree.Presenters"&gt;&lt;SolutionStructureMatchingEnabled&gt;true&lt;/SolutionStructureMatchingEnabled&gt;&lt;/SolutionBasedCoverageTreeFeaturePresenterState&gt;</s:String>
	<s:String x:Key="/Default/Presenter/FeaturePresenterStates/=TestsAwareCoverageTreeFeaturePresenterState/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;TestsAwareCoverageTreeFeaturePresenterState xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/JetBrains.dotCover.Presentation.Vs.UnitTesting.CoverageTreeFeature.Presenters"&gt;&lt;StatisticsType&gt;AllTests&lt;/StatisticsType&gt;&lt;/TestsAwareCoverageTreeFeaturePresenterState&gt;</s:String>
	<s:String x:Key="/Default/Presenter/ViewModeName/@EntryValue">CoverageTree</s:String>
	<s:Boolean x:Key="/Default/SnapshotHighlighting/HighlightingEnabledValueSet/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/SnapshotHighlighting/HighlightingEnabled/@EntryValue">True</s:Boolean></wpf:ResourceDictionary>